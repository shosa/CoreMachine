version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: coremachine-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-coremachine}
      MYSQL_USER: ${MYSQL_USER:-coremachine}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - coremachine-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: coremachine-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER:-coremachine}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-password}
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - coremachine-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: coremachine-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - coremachine-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  # Meilisearch
  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: coremachine-meilisearch
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-masterKey}
      MEILI_ENV: ${MEILI_ENV:-production}
    volumes:
      - meilisearch-data:/meili_data
    ports:
      - "7700:7700"
    networks:
      - coremachine-network

  # Backend API (NestJS)
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      DATABASE_URL: mysql://${MYSQL_USER:-coremachine}:${MYSQL_PASSWORD:-password}@mysql:3306/${MYSQL_DATABASE:-coremachine}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-this}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: "false"
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_BUCKET_NAME: coremachine-files
      MEILISEARCH_HOST: http://meilisearch:7700
      MEILISEARCH_API_KEY: ${MEILI_MASTER_KEY:-masterKey}
      APP_PORT: 3001
      APP_URL: ${APP_URL:-http://localhost}
      NODE_ENV: production
      PRISMA_CLIENT_ENGINE_TYPE: binary
      PRISMA_CLI_QUERY_ENGINE_TYPE: binary
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
      meilisearch:
        condition: service_started
    networks:
      - coremachine-network
    command: sh -c "npx prisma migrate deploy && node dist/main"

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3001/api
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - coremachine-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: coremachine-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - coremachine-network

# Volumes persistenti
volumes:
  mysql-data:
  minio-data:
  meilisearch-data: 
# Network personalizzata
networks:
  coremachine-network:
    driver: bridge
